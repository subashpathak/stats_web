knitr::opts_chunk$set(echo = TRUE)
#set libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
# Let's look at a right skewed (negative binomial distribution)
set.seed(1536)
#this gives us a set of random numbers that follow negative binomial distribution with a sample size of 100
neg_binom<-rnbinom(100,30,0.3)
neg_binom1<-as.data.frame(neg_binom)
#plot histogram and density curve
hist<- ggplot(neg_binom1, aes(x=neg_binom)) +
geom_histogram(aes(y=..density..),bins=20) + geom_density() +
labs(x="X",y="Density") + ggtitle("Right Skewed negative binomial distribution")
hist
# Let's take the same negative binomial distribution with large sample size
set.seed(1546)
#this gives us a set of random numbers that follow negative binomial distribution with a sample size of 10000
neg_binom<-rnbinom(10000,30,0.3)
neg_binom1<-as.data.frame(neg_binom)
#plot histogram and density curve
hist<- ggplot(neg_binom1, aes(x=neg_binom)) +
geom_histogram(aes(y=..density..),bins=20) + geom_density() +
labs(x="X",y="Density") + ggtitle("Normal Distribution obtained using larger sample size")
hist
#set libraries
library(dplyr)
#Simulate dataset using normal distribution
set.seed(1234)
x<- rnorm(n=50, sd=2, mean=25)
y<- rnorm(n=50, sd=3, mean=30)
x
names(x)
class(x)
#set libraries
library(dplyr)
#Simulate dataset using normal distribution
set.seed(1234)
x<- as.data.frame(rnorm(n=50, sd=2, mean=25))
y<- as.data.frame(rnorm(n=50, sd=3, mean=30))
x
#set libraries
library(dplyr)
#Simulate dataset using normal distribution
set.seed(1234)
x$var1<- as.data.frame(rnorm(n=50, sd=2, mean=25))
y<- as.data.frame(rnorm(n=50, sd=3, mean=30))
x
#set libraries
library(dplyr)
#Simulate dataset using normal distribution
set.seed(1234)  #set seed so that results don't change for future rerun
#Generate two vectors using normal distribution
x<- rnorm(n=50, sd=2, mean=25)
y<- rnorm(n=50, sd=3, mean=30)
our_data<- data.frame(x,y)
our_data
#filter chooses rows from the columns; for example in this code we want to choose values less than 25 from the column x
filter(our_data, x < 25)
#filter chooses rows from the columns; for example in this code we want to choose values less than 25 from the column x
filter(our_data, x > 25)
#filter chooses rows from the columns; for example in this code we want to choose values less than 25 from the column x
filter(our_data, x > 28)
#set libraries
library(dplyr)
#Simulate dataset with random normal distribution
set.seed(1234)  #set seed so that results don't change for future rerun
#Generate two vectors with  random normal distribution
x<- rnorm(n=10, sd=2, mean=25)
y<- rnorm(n=10, sd=3, mean=30)
#Combine both simulated vectors to create a data frame
our_data<- data.frame(x,y)
our_data
#select chooses columns from our data; for example in this code we want keep only x as our column in the dataset
select(our_data, x)
#summarise creates summary of the variable in the dataset and collapses to a single row; here we are calculating mean of x
summarise(our_data, x=mean(x))
#mutate creates new variable; here we are creating a new variable x_twice multiplying x by 2
mutate(our_data, x_twice=2*x)
#filter chooses rows from the columns; for example in this code we want to subset the data only to those values whose x is greater than 25
filter(our_data, x > 25)
#select chooses columns from our data;
#for example in this code we want keep only x as our #column in the dataset
select(our_data, x)
#filter chooses rows from the columns; for example in this code we want to subset the data only to those values whose x is greater than 25
filter(our_data, x > 25)
